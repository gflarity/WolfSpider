var http = require('http');
var util = require('util');
var fs = require('fs');
var spider = require('./main');
var s = spider();
var url = process.argv[2];

try {
    var html_file = url.split('/').pop();
    var dir = html_file.split('.').shift();
    fs.mkdirSync(dir, '0755');
} catch ( e ) {
    console.log( e.message );    
}

var get_file = function get_file( url ) {
        
        
    var url_components = url.split( '/' );    
    url_components.shift();
    url_components.shift();
    var host = url_components.shift();
    var path = '/' + url_components.join('/');
    
    var options = {
            host: host,
            port: 80,
            path: path
    };
    
    
    http.get(options, function(res) {
        var link_path = res.connection._httpMessage.path;
        var filename = link_path.split('/').pop();
        var out = fs.createWriteStream( dir + '/' + filename);
        res.on('data', function (chunk) {
                out.write(chunk);
        });
    });
 
    
};


var on_main_match = function on_main_match(window, $ ) {

    var element_array = $('a[href$=".html"]');
    var sub_regex = /\/\d+\/\d+.html/;

    element_array.each( function(i) { 
        var a = element_array[i];
        if ( sub_regex.test( a.href )  ) {
            s.get( a.href );    
        }
    });
};
s.route('www.kodiefiles.nl', /\/\d\d\d\d\/\d\d\/[\w|\-]+\d?.html/, on_main_match );

var on_sub_match = function on_sub_match( window, $ ) {

    console.log(this.url);
    var url_components = this.url.href.split( '/');
    url_components.pop();
    var url_base = url_components.join('/');
    //console.log(require('util').inspect(this));
    var img_regex = /full\/\d+.jpg/;
    var element_array = $('img');
    
    element_array.each( function(i) { 
        var a = element_array[i];
        if ( img_regex.test( a.src ) ) {
            get_file( url_base + '/' + a.src );
        }
    });
    

};
s.route('images.kodiefiles.nl', /\/\d+\/\d+.html/, on_sub_match );

//start it off
s.get(url);
